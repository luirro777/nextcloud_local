---

 - name: Install mysql packages
   apt: name={{ item }} state=present update_cache=yes
   with_items: "{{ mysql_packages }}"

 - name: include tasks about limits
   include_tasks: limits.yml

 - name: Copy configuration file
#   template: src=mysql.cnf.j2 dest={{ mysql_conf_dir  }}/conf.d/mysql.cnf
   template: src=50-server.cnf.j2 dest={{ mysql_conf_dir  }}/mariadb.conf.d/50-server.cnf
   notify: restart mysql

 - name: Start mysql service
   service: name={{ mysql_service }} state=started enabled=yes

 - name: Update root
   mysql_user:
     name: root
     password: "{{ mysql_root_db_pass }}"
     host: "{{ item  }}"
   with_items: 
     - 127.0.0.1
     - ::1
     - localhost
   when: ansible_hostname == 'localhost'

 - name: Update root
   mysql_user:
     name: root
     password: "{{ mysql_root_db_pass }}"
     host: "{{ item  }}"
   with_items:
     - "{{ ansible_hostname }}"
     - 127.0.0.1
     - ::1
     - localhost
   when: ansible_hostname != 'localhost'


 - name: Copy .my.cnf with root password credentials
   template: 
     src: .my.cnf.j2
     dest: ~/.my.cnf
     mode: 0600
   notify: "restart mysql"
 
 - name: Ensure non anonymous users in database
   mysql_user: name='' host={{ item }} state=absent
   with_items:
     - localhost
     - "{{ ansible_hostname }}"

 - name: Remove test database
   mysql_db:
     name: test
     state: absent

 - name: Create databases
   mysql_db: name={{ item.name }} state=present
   with_items: "{{ mysql_db  }}"
   when: mysql_db|lower() != 'none'

 - name: delete the users
   mysql_user:
     name: "{{ item.name }}"
     password: "{{ item.pass }}"
     priv: "{{ item.db }}.*:ALL"
     state: absent
     host: "%"
   with_items: "{{ mysql_users  }}"

 - name: Create the users
   mysql_user:
     name: "{{ item.name }}"
     password: "{{ item.pass }}"
     priv: "{{ item.db }}.*:ALL"
     state: present
     host: "%"
   with_items: "{{ mysql_users  }}"
